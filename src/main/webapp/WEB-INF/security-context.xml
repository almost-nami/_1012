<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"></bean>

    <!--
    <bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>
    -->

    <!--
    <bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean>
    -->

    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

    <bean id="customUserDetailsService" class="org.zerock.security.CustomUserDetailsService"></bean>

    <!--
        <security:http>는 기본 설정이 표현식을 이용하는 것
        단순 문자열을 사용하고 싶을 때 use-expressions="false" 로 지정
    -->
    <security:http>

        <!--
            특정 URI에 접근할 때 인터셉터를 이용한 접근 제한 설정
            pattern : URI의 패턴
            access : 권한 체크, 표현식/권한명을 의미하는 문자열
         -->
        <security:intercept-url pattern="/sample/all" access="permitAll" />

        <security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />

        <security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')" />

        <!--
        <security:form-login />
        -->

        <!-- 로그인 성공 후 처리를 담당하는 핸들러 -->
        <security:form-login login-page="/customLogin"/>

        <!--
        <security:access-denied-handler error-page="/accessError" />
        -->
        <security:access-denied-handler ref="customAccessDenied" />

        <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>

        <security:logout logout-url="/customLogout" invalidate-session="true"/>

    </security:http>


    <security:authentication-manager>

        <!--
        <security:authentication-provider>
        -->

        <!-- CustomUserDetailsService 이용 -->

        <security:authentication-provider user-service-ref="customUserDetailsService">

            <!--
            <security:user-service>

                <security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />

                <security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN" />

            </security:user-service>
            -->

            <!--
            <security:jdbc-user-service data-source-ref="dataSource" />
            -->

            <!--
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query=
                                                "select userid username, userpw password, enabled from tbl_member where userid = ?"
                                        authorities-by-username-query=
                                                "select userid username, auth authority from tbl_member_auth where userid = ?" />
            -->

            <!-- change to Bcrypt
            <security:password-encoder ref="customPasswordEncoder" />
            -->

            <security:password-encoder ref="bcryptPasswordEncoder" />

        </security:authentication-provider>

    </security:authentication-manager>

</beans>